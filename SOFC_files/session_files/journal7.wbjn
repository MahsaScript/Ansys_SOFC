# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="FFF 1")
system1.Delete()
system2 = GetSystem(Name="FFF")
system2.Delete()
system3 = GetSystem(Name="CFX 1")
system3.Delete()
system4 = GetSystem(Name="SYS")
system4.Delete()
system5 = GetSystem(Name="CFX")
system5.Delete()
template1 = GetTemplate(TemplateName="Geometry")
system6 = template1.CreateSystem()
geometry1 = system6.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/Geometry.x_b")
template2 = GetTemplate(TemplateName="Mesh")
system7 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system6)
geometryComponent1 = system7.GetComponent(Name="Geometry")
geometryComponent2 = system6.GetComponent(Name="Geometry")
geometryComponent1.ReplaceWithShare(
    TargetSystem=system7,
    ComponentToShare=geometryComponent2,
    SourceSystem=system6)
template3 = GetTemplate(TemplateName="FLUENT")
system8 = template3.CreateSystem(
    Position="Right",
    RelativeTo=system7)
system9 = template1.CreateSystem(
    Position="Below",
    RelativeTo=system6)
meshComponent1 = system7.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system7.GetContainer(ComponentName="Mesh")
mesh1.Edit()
setupComponent1 = system8.GetComponent(Name="Setup")
meshComponent1.TransferData(TargetComponent=setupComponent1)
meshComponent1.DeleteTransfer(TargetComponent=setupComponent1)
meshComponent1.TransferData(TargetComponent=setupComponent1)
meshComponent1.Update(AllDependencies=True)
template4 = GetTemplate(TemplateName="FLTG")
system10 = template4.CreateSystem(
    Position="Right",
    RelativeTo=system9)
meshComponent1.DeleteTransfer(TargetComponent=setupComponent1)
meshComponent1.TransferData(TargetComponent=setupComponent1)
setupComponent1.Refresh()
meshComponent1.Update(AllDependencies=True)
template5 = GetTemplate(TemplateName="Fluid Flow")
system11 = template5.CreateSystem(
    Position="Right",
    RelativeTo=system10)
meshComponent1.DeleteTransfer(TargetComponent=setupComponent1)
geometryComponent3 = system11.GetComponent(Name="Geometry")
geometryComponent3.ReplaceWithShare(
    TargetSystem=system11,
    ComponentToShare=geometryComponent2,
    SourceSystem=system6)
meshComponent2 = system11.GetComponent(Name="Mesh")
meshComponent2.ReplaceWithShare(
    TargetSystem=system11,
    ComponentToShare=meshComponent1,
    SourceSystem=system7)
meshComponent1.Update(AllDependencies=True)
meshComponent1.TransferData(TargetComponent=setupComponent1)
system10.Delete()
setupComponent1.Refresh()
setup1 = system8.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000114568 -0.000324175 0.000334798) '(0 0 0) '(0.00896066 0.0125555 0.00911647) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0121316 -0.0131563 -0.0117798) '(0 0 0) '(0.325551 0.253825 0.332962) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0282578 -0.0294054 0.00142774) '(0 0 0) '(1.13429 -1.07947 0.381959) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00756769 0.000183044 -0.00572907) '(0 0 0) '(-0.122209 0.184823 0.302341) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0190797 0.0347282 0.00300878) '(0 0 0) '(-1.20452 0.763201 -0.122803) 0 0)")
setup1.SendCommand(Command='/define/models/addon-module 9 5 no yes no no yes "none" no no yes "none" no no yes "none" no no yes "none" yes "mass flow rate"')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-PEM Fuel Cell (Off)*Edit...")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.00181388 -0.0070189 -0.00149068) '(0 0 0) '(0.276221 0.0725033 -0.00740343) 0 0)(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\" #f)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(cathode_channel) (cx-active-window))(cx-use-window-id 1)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(cathode_channel) (cx-active-window))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)" #f)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1 2 3 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))")')
Save(Overwrite=True)
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 1 2 3 4))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1 2 3 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 2 3 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 3 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '())(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(wb-check-upstream-change)(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\" #f)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\")(cx-use-window-id 1)(cx-set-camera-relative '(-0.0115933 -0.0116983 0.0118692) '(0 0 0) '(-0.464598 -0.444492 0.475687) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00170166 0.00816937 -0.0038678) '(0 0 0) '(0.255923 0.35754 -0.312142) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0222994 -0.011748 -0.0231411) '(0 0 0) '(0.60967 0.373391 0.391986) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0203637 -0.0190271 0.0145902) '(0 0 0) '(0.535414 -0.449145 0.660851) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0190857 0.00918004 -0.0138761) '(0 0 0) '(-0.257713 -0.253216 0.223466) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00143632 0.00855044 0.00259301) '(0 0 0) '(-0.249481 0.0513908 -0.00300801) 0 0)(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\" '( 2))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 4 5))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 5))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 5 7))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\")(cx-gui-do cx-set-real-entry-list \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*Table2(Resistivity (ohm-m2))*RealEntry6(interior-anode_channel)\" '( 1e-06))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\" #f)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '( 29))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 32))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Operating Conditions*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"101325\" . 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-31 (wall, id=31)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-34 (wall, id=34)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-35 (wall, id=35)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-35 (wall, id=35)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-35 (wall, id=35)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(cathode_cl) (cx-active-window))(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(cathode_cl) (cx-active-window))(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(contact_region_4-src) (cx-active-window))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Interface|contact_region_3-trg (interface, id=28)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_3-trg (interface, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_3-trg (interface, id=28)"))(cx-gui-do cx-activate-item "Interface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)"))(cx-gui-do cx-activate-item "Interface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_4-src (interface, id=29)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_4-src (interface, id=29)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_4-src (interface, id=29)"))(cx-gui-do cx-activate-item "Interface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.0250036 -0.00196842 -0.00954155) '(0 0 0) '(0.25201 0.567731 -1.30905) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.00282472 0.00214351 0.0113451) '(0 0 0) '(-0.212419 -0.00613922 -0.0538771) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0220518 0.00266036 0.00821824) '(0 0 0) '(0.00883262 0.0539399 0.140477) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00574412 -0.00224968 -0.0101045) '(0 0 0) '(-0.0390426 -0.0169166 -0.0467055) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Interface|contact_region_4-trg (interface, id=30)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_4-trg (interface, id=30)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_4-trg (interface, id=30)"))(cx-gui-do cx-activate-item "Interface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(5.12432e-05 -0.000514066 -0.000459229) '(0 0 0) '(0.02381 0.00059092 -0.00186738) 0 0)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(cathode_cl) (cx-active-window))(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(contact_region_4-src) (cx-active-window))(cx-use-window-id 1)(cx-set-camera-relative '(0 0 0) '(0 0 0) '(0 0 0) 0 0)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(cathode_cl) (cx-active-window))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-32 (wall, id=32)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-32 (wall, id=32)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-32 (wall, id=32)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
meshComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(wb-check-upstream-change)(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity")(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, NumberOfProcessors=1))
setup1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0109022 -0.00901089 -0.015321) '(0 0 0) '(0.138294 0.125293 0.0801406) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (On)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-7 (interior, id=7)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-7 (interior, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-7 (interior, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-7 (interior, id=7)"))(cx-gui-do cx-activate-item "Interior*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.0125409 -0.0199661 0.0225988) '(0 0 0) '(0.73313 0.0513059 0.704665) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0344819 0.00401385 -0.0134605) '(0 0 0) '(-0.25305 -0.454079 0.610412) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.00149252 0.00316949 -0.00859336) '(0 0 0) '(-0.25377 -0.0584375 0.0234199) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)\"))(cx-use-window-id 1)(cx-set-camera-relative '(0.00136776 0.0121367 0.0063156) '(0 0 0) '(0.450322 0.111895 -0.101651) 0 0)(cx-gui-do cx-activate-item \"Interface*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)|wall-34 (wall, id=34)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)|wall-34 (wall, id=34)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Interface|contact_region_2-src (interface, id=25)|wall-34 (wall, id=34)\"))(cx-use-window-id 1)(cx-set-camera-relative '(0.00225811 -0.0185436 0.00481792) '(0 0 0) '(-0.35048 0.216613 -0.103419) 0 0)(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-anode_channel (porous-jump, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-anode_channel (porous-jump, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Internal|interior-anode_channel (porous-jump, id=4)\"))(cx-use-window-id 1)(cx-set-camera-relative '(-0.00221058 0.0171989 -0.00267375) '(0 0 0) '(0.40604 -0.0251202 -0.0750481) 0 0)(cx-gui-do cx-activate-item \"Porous Jump*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)\"))(cx-use-window-id 1)(cx-set-camera-relative '(0.0336254 -0.0282191 -0.0156207) '(0 0 0) '(-1.22908 -0.876291 -1.10985) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0150326 0.0185476 0.0109516) '(0 0 0) '(0.82592 -0.518315 -0.221865) 0 0)(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Specified Shear\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Specified Shear\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*No Slip\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*No Slip\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"1e-5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"1e-5\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"333\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"333\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.5\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.5\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.001\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)\"))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.001\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.001\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"333\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"333\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.2\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.2\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.17\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.17\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)\"))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.5\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"333\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel (wall, id=17)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel (wall, id=17)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_channel (wall, id=17)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"333\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.2\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.17\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.17\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-41 (wall, id=41)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-41 (wall, id=41)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-41 (wall, id=41)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|membrane (wall, id=20)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|membrane (wall, id=20)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|membrane (wall, id=20)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|cathode_cl (wall, id=22)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|cathode_cl (wall, id=22)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|cathode_cl (wall, id=22)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)\"))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)\"))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(Electric Potential)\" '(\"0.8\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|catalyst-default"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|catalyst-default"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|catalyst-default"))(cx-gui-do cx-set-toggle-button2 "Create/Edit Materials*Table1*Frame1*Frame2*ToggleBox1(Order Materials by)*Chemical Formula" #t)(cx-gui-do cx-activate-item "Create/Edit Materials*Table1*Frame1*Frame2*ToggleBox1(Order Materials by)*Chemical Formula")(cx-gui-do cx-set-toggle-button2 "Create/Edit Materials*Table1*Frame1*Frame2*ToggleBox1(Order Materials by)*Name" #t)(cx-gui-do cx-activate-item "Create/Edit Materials*Table1*Frame1*Frame2*ToggleBox1(Order Materials by)*Name")(cx-gui-do cx-set-toggle-button2 "Create/Edit Materials*Table1*Frame1*Frame2*ToggleBox1(Order Materials by)*Chemical Formula" #t)(cx-gui-do cx-activate-item "Create/Edit Materials*Table1*Frame1*Frame2*ToggleBox1(Order Materials by)*Chemical Formula")(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|aluminum"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|catalyst-default"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|catalyst-default"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|catalyst-default"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*Table1*Frame1*Frame2*ButtonBox2*PushButton2(User-Defined Database)")(cx-gui-do cx-activate-item "Open Database*PushButton2(Browse)")(cx-gui-do cx-activate-item "Open Database*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList2(Pressure)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList2(Pressure)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Density)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Density)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(Momentum)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(Momentum)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList5(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList5(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList6(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList6(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList7(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList7(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList8(Energy)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList8(Energy)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList9(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList9(Electric Potential)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList10(Protonic Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList10(Protonic Potential)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList11(Cap  Pressure)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList11(Cap  Pressure)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList12(Water Content)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList12(Water Content)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList13(Liq  Saturation in Channels)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList13(Liq  Saturation in Channels)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Controls\"))(cx-gui-do cx-set-real-entry-list \"Solution Controls*Table1*Table1*Table4(Explicit Relaxation Factors)*RealEntry1(Momentum)\" '( 0.3))(cx-gui-do cx-activate-item \"Solution Controls*Table1*Table1*Table4(Explicit Relaxation Factors)*RealEntry1(Momentum)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Controls*Table1*Table1*Table4(Explicit Relaxation Factors)*RealEntry2(Pressure)\" '( 0.7))(cx-gui-do cx-activate-item \"Solution Controls*Table1*Table1*Table4(Explicit Relaxation Factors)*RealEntry2(Pressure)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Controls*Table1*Table1*Table5(Under-Relaxation Factors)*RealEntry6(Energy)\" '( 0.95))(cx-gui-do cx-activate-item \"Solution Controls*Table1*Table1*Table5(Under-Relaxation Factors)*RealEntry6(Energy)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Solution Controls*Table1*CheckButton3(Set All Species URFs Together)\" #t)(cx-gui-do cx-activate-item \"Solution Controls*Table1*CheckButton3(Set All Species URFs Together)\")(cx-gui-do cx-set-real-entry-list \"Solution Controls*Table1*Table1*Table5(Under-Relaxation Factors)*RealEntry3(h2)\" '( 0.95))(cx-gui-do cx-activate-item \"Solution Controls*Table1*Table1*Table5(Under-Relaxation Factors)*RealEntry3(h2)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Controls*Table1*Table2*PushButton6(Advanced)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList10\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList10")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList10\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList10")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList15\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList15")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList20\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList20")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry12\" '( 0.001))(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry17\" '( 0.001))(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry22\" '( 0.001))(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList25\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList25")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry32\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry37\" '( 0.0001))(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList35\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList35")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList40\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*DropDownList40")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry42\" '( 0.001))(cx-gui-do cx-set-real-entry-list \"Advanced Solution Controls*Frame1*Frame1(Multigrid)*Table1*Table1*Table1*RealEntry47\" '( 0.01))(cx-gui-do cx-activate-item \"Advanced Solution Controls*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))(cx-gui-do cx-set-toggle-button2 \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\" #t)(cx-gui-do cx-activate-item \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\")(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry8(Temperature)\" '( 333))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry8(Temperature)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 40)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 200)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton3(Maintain Constant Velocity Magnitude)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton3(Maintain Constant Velocity Magnitude)")(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
solutionComponent1 = system8.GetComponent(Name="Solution")
solutionComponent1.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Surfaces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Graphics*Views...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*Table3(Surface)*PushButton1(Create)")')
setupComponent2 = system11.GetComponent(Name="Setup")
setupComponent2.Refresh()
setup2 = system11.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True))
setup2.Edit()
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list ))(cx-use-window-id 1)(cx-set-camera-relative '(0.0123999 -0.0171215 -0.0162494) '(0 0 0) '(0.392724 0.107117 -0.0705586) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton3(Maintain Constant Velocity Magnitude)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton3(Maintain Constant Velocity Magnitude)")(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 200)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 2 3 4 5 6 7 8 9))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 2 3 4 5 6 7 8 9 10 11))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(3.2939e-05 0.00101066 0.00650774) '(0 0 0) '(0.115322 0.00474727 -0.00322533) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 2))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 3))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000136085 -0.000216667 -0.00693851) '(0 0 0) '(-0.172318 -0.223689 -0.212771) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Contour Lines)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.26567e-05 0.000611269 0.00026217) '(0 0 0) '(-0.0111077 -0.0248383 -0.0158507) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 12))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(6.68243e-05 0.000565658 0.00202612) '(0 0 0) '(0.0925569 0.0130904 -0.00546044) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 1e-06))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton1(Use Specified Initial Pressure on Inlets)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton1(Use Specified Initial Pressure on Inlets)")(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton2(Use External-Aero Favorable Settings)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton2(Use External-Aero Favorable Settings)")(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*IntegerEntry1(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.0156451 -0.000599837 0.0158925) '(0 0 0) '(0.663682 0.302209 0.80938) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0109675 0.00479674 -0.0122749) '(0 0 0) '(-0.079147 0.0396204 0.0120534) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.000870219 -0.00233297 -0.00257895) '(0 0 0) '(-0.171208 0.0588675 -0.00218016) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 2))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000174183 -0.000744101 0.00165073) '(0 0 0) '(-0.052884 0.0114642 -0.0329345) 0 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton4(Compute)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000400677 0.00153763 -0.00173701) '(0 0 0) '(0.1104 -0.0272468 0.0196816) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton4(Compute)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Vectors\"))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 12))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton4(Compute)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton4(Compute)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Pathlines\"))(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 2 3 4 5 6 7 8 9))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*Table1*DropDownList1(Color by)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*Frame4*Table1*DropDownList1(Color by)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*Table1*DropDownList2\" '( 2))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*Frame4*Table1*DropDownList2")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 2 3 4 5 6 7 8 9 10 11))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton7(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton7(Pulse)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*Table1*DropDownList1(Color by)\" '( 3))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*Frame4*Table1*DropDownList1(Color by)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*Table1*DropDownList2\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*Frame4*Table1*DropDownList2")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton6(Compute)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton7(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton7(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|anode_cl (wall, id=21)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|anode_cl (wall, id=21)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))')
mesh1.Exit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|anode_cl (wall, id=21)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
geometry1.Edit()
geometry1.Exit()
geometry1.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/Geometry.x_b")
meshComponent1.Refresh()
mesh1.Edit()
Save(Overwrite=True)
mesh1.Exit()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Species)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Select Boundary Species*Table1*Frame2(Selected)*List1(Species)\" '( 0))(cx-gui-do cx-activate-item \"Select Boundary Species*Table1*Frame2(Selected)*List1(Species)\")(cx-gui-do cx-set-list-selections \"Select Boundary Species*Table1*Frame2(Selected)*List1(Species)\" '( 0 1))(cx-gui-do cx-activate-item \"Select Boundary Species*Table1*Frame2(Selected)*List1(Species)\")(cx-gui-do cx-set-list-selections \"Select Boundary Species*Table1*Frame2(Selected)*List1(Species)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Select Boundary Species*Table1*Frame2(Selected)*List1(Species)\")(cx-gui-do cx-activate-item \"Select Boundary Species*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*IntegerEntry1(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table1*Table3*PushButton1(Update Dynamic Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Motion*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton2(Display)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton4(Colors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Colors*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (On)\"))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\" '( 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Micro Porous Layer\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Micro Porous Layer\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 0 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 0 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Micro Porous Layer\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Micro Porous Layer\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\" '( 2))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-anode_channel (porous-jump, id=4)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-anode_channel (porous-jump, id=4)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Internal|interior-anode_channel (porous-jump, id=4)"))(cx-gui-do cx-activate-item "Porous Jump*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=92)\"))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table2(Direction)*ExpressionEntry1(X)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table2(Direction)*ExpressionEntry2(Y)\" '(\"0.3\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table2(Direction)*ExpressionEntry3(Z)\" '(\"0.3\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.0001\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Heat Flux\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Heat Flux\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Convection\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Convection\")(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel (wall, id=16)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=91)\"))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.01\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table2(Direction)*ExpressionEntry2(Y)\" '(\"0.7\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"370\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(Electric Potential)\" '(\"20\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry41\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry47\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry53\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry59\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry65\" '( 1e-06))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry71\" '( 1e-06))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))(cx-gui-do cx-set-toggle-button2 \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\" #t)(cx-gui-do cx-activate-item \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\")(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry2(X Velocity)\" '( 0.05))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry2(X Velocity)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry3(Y Velocity)\" '( 0.08))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry3(Y Velocity)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry4(Z Velocity)\" '( 0.03))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry4(Z Velocity)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry5(h2)\" '( 0.2))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry5(h2)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry6(o2)\" '( 0.9))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry6(o2)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry7(h2o)\" '( 0.2))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry7(h2o)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry9(Electric Potential)\" '( 2))(cx-gui-do cx-activate-item \"Solution Initialization*Table1*Table6(Initial Values)*RealEntry9(Electric Potential)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
solutionComponent1.Refresh()
solution1 = system8.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0121198 -0.0126767 -0.0126462) '(0 0 0) '(0.307687 0.204527 0.136758) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.000284698 -0.00238973 -0.00166122) '(0 0 0) '(0.0823144 0.0153361 0.00458696) 0 0)")
Save(Overwrite=True)
