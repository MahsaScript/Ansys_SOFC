# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="FFF")
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.00929841 -0.00803446 -0.00481016) '(0 0 0) '(0.24072 0.177545 0.112487) 0 0)")
setup1.SendCommand(Command='/define/models/addon-module 9 5 no yes no no yes "none" no no yes "none" no no yes "none" no no yes "none" yes "mass flow rate"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Plots)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Reports)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Animation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Model Specific)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Animation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Reports)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Results)*Table1*PushButton1(Reports)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.000571262 0.00147905 -0.0100695) '(0 0 0) '(-0.197087 -0.0203515 0.176048) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\" #f)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\" '( 2))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 4))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 4 5))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 5))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 5 7))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-real-entry-list \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*Table2(Resistivity (ohm-m2))*RealEntry6(interior-anode_channel)\" '( 2e-06))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*CheckButton3(Use First Value for All)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '( 30))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 33))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Warning*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=18)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=18)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_channel.1 (wall, id=18)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0 0 0) '(0 0 0) '(0 0 0) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.00278244 -0.0117343 0.00299567) '(0 0 0) '(0.477398 0.112982 0.000556856) 0 0)(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(wall-cathode_channel.1) (cx-active-window))(cx-use-window-id 1)(cx-use-window-id 1)(build-popup-menu)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(wall-cathode_channel.1) (cx-active-window))(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(wall-anode_channel.1) (cx-active-window))(cx-use-window-id 1)(build-popup-menu)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton12(More)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"353\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"353\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"353\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=19)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=19)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=19)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(wall-cathode_channel.1) (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton12(More)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(Electric Potential)\" '(\"0.65\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(Electric Potential)\" '(\"0.65\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"353\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"353\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(wall-anode_channel.1) (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton12(More)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox2*Rotational\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox2*Rotational\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox2*Translational\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox2*Translational\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Heat Flux\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Heat Flux\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Radiation\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Radiation\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Mixed\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Mixed\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Heat Flux\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Heat Flux\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table2(Direction)*ExpressionEntry1(X)\" '(\"1\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"3e-7\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"3e-7\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.6\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.6\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.6\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.6\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.4\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.4\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=19)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=19)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_channel.1 (wall, id=19)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"2e-6\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"2e-6\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.21\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.21\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.15\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.15\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*PushButton1(Reports)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*PushButton1(Initialization)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*PushButton1(Activities)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*PushButton1(Run Calculation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*PushButton5(Run Calculation)")')
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.Exit()
