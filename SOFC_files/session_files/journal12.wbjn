# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="FLU")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
system2 = GetSystem(Name="Geom")
geometry1 = system2.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/SOFC_Complete.sat")
system3 = GetSystem(Name="SYS")
meshComponent1 = system3.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system3.GetContainer(ComponentName="Mesh")
mesh1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
meshComponent1.Update(AllDependencies=True)
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
Save(Overwrite=True)
mesh1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
system4 = GetSystem(Name="FFF")
system4.Update(AllDependencies=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system4.Delete()
system1.Delete()
system3.Delete()
system2.Delete()
template1 = GetTemplate(TemplateName="Geometry")
system5 = template1.CreateSystem()
geometry2 = system5.GetContainer(ComponentName="Geometry")
geometry2.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/SOFC_Complete.step")
template2 = GetTemplate(TemplateName="Mesh")
system6 = template2.CreateSystem(
    Position="Right",
    RelativeTo=system5)
geometryComponent1 = system6.GetComponent(Name="Geometry")
geometryComponent2 = system5.GetComponent(Name="Geometry")
geometryComponent1.ReplaceWithShare(
    TargetSystem=system6,
    ComponentToShare=geometryComponent2,
    SourceSystem=system5)
meshComponent2 = system6.GetComponent(Name="Mesh")
meshComponent2.Refresh()
mesh2 = system6.GetContainer(ComponentName="Mesh")
mesh2.Edit()
template3 = GetTemplate(TemplateName="FLUENT")
system7 = template3.CreateSystem(
    Position="Right",
    RelativeTo=system6)
setupComponent2 = system7.GetComponent(Name="Setup")
meshComponent2.TransferData(TargetComponent=setupComponent2)
setupComponent2.Refresh()
meshComponent2.Update(AllDependencies=True)
setupComponent2.Refresh()
setup2 = system7.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup2.Edit()
setup2.SendCommand(Command='/define/models/addon-module 9 5 no yes no no yes "none" no no yes "none" no no yes "none" no no yes "none" yes "mass flow rate"')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\" #f)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 12))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent2.Refresh()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)" #f)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame1(Model)*Table1*Table2( Options)*CheckButton10(Liquid Phase)")(cx-gui-do cx-set-toggle-button2 "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector" #t)(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '())(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|cathode_current_collector (fluid, id=46)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|cathode_current_collector (fluid, id=46)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|cathode_current_collector (fluid, id=46)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|cathode_current_collector (fluid, id=46)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|sofc_complete-freeparts_id2 (fluid, id=31)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|sofc_complete-freeparts_id2 (fluid, id=31)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|sofc_complete-freeparts_id2 (fluid, id=31)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|sofc_complete-freeparts_id2 (fluid, id=31)"))(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-toggle-button2 \"Boundary Conditions*Table1*CheckButton4(Highlight Zone)\" #t)(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*CheckButton4(Highlight Zone)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (Off)\"))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*ToggleBox1*CheckButton1(Enable PEMFC)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 1))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 9))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 9 10))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 10))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 8 10))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 10))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 3 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1 3 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1 7 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 1 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 6 10))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 6))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '())(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '())(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 6))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0 6))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\" '( 13))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Micro Porous Layer\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Micro Porous Layer\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\" '( 14))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 10))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 9))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame6(TPB Layer (Catalyst))*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Micro Porous Layer\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Micro Porous Layer\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\" '( 5))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 14))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 14 21))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\")(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="/define/models/addon-module yes mixture-template")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)\"))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton2(Operating Conditions)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)\"))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame2(Thermal)*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"370\" . 0))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"0.02\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table17*ExpressionEntry1(Y-Velocity)\" '(\"0.04\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table18*ExpressionEntry1(Z-Velocity)\" '(\"0.07\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.2\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.4\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)\"))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"0.1\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table17*ExpressionEntry1(Y-Velocity)\" '(\"0.9\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table18*ExpressionEntry1(Z-Velocity)\" '(\"0.9\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table16*ExpressionEntry1(X-Velocity)\" '(\"0.8\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame2(Thermal)*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"390\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.7\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.8\" . 0))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame8(UDS)*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(Electric Potential)\" '(\"0.99\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*DropDownList5(Backflow Reference Frame)\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame1(Momentum)*Table1*DropDownList5(Backflow Reference Frame)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)\"))(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame8(UDS)*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*DropDownList5(Backflow Reference Frame)\" '( 0))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame1(Momentum)*Table1*DropDownList5(Backflow Reference Frame)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*CheckButton10(Set All Species Discretizations Together)" #t)(cx-gui-do cx-activate-item "Solution Methods*Table1*CheckButton10(Set All Species Discretizations Together)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-toggle-button2 "Solution Controls*Table1*CheckButton3(Set All Species URFs Together)" #t)(cx-gui-do cx-activate-item "Solution Controls*Table1*CheckButton3(Set All Species URFs Together)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)\"))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame4(Species)*Table1*Table6(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.1\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame4(Species)*Table1*Table6(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.1\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame4(Species)*Table1*Table6(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.3\" . 0))(cx-gui-do cx-activate-item \"Pressure Outlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|cathode_outlet (pressure-outlet, id=317)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|cathode_outlet (pressure-outlet, id=317)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Outlet|cathode_outlet (pressure-outlet, id=317)\"))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame4(Species)*Table1*Table6(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.3\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame4(Species)*Table1*Table6(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.5\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame4(Species)*Table1*Table6(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.1\" . 0))(cx-gui-do cx-activate-item \"Pressure Outlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.1\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame4(Species)*Table1*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.2\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton1(Use Specified Initial Pressure on Inlets)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton1(Use Specified Initial Pressure on Inlets)")(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton2(Use External-Aero Favorable Settings)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton2(Use External-Aero Favorable Settings)")(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton3(Maintain Constant Velocity Magnitude)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton3(Maintain Constant Velocity Magnitude)")(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")')
Save(Overwrite=True)
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
Save(Overwrite=True)
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"20\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|anode_inlet (velocity-inlet, id=312)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|cathode_inlet (velocity-inlet, id=316)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"20\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|anode_outlet (pressure-outlet, id=311)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|cathode_outlet (pressure-outlet, id=317)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|cathode_outlet (pressure-outlet, id=317)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|cathode_outlet (pressure-outlet, id=317)"))(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))(cx-gui-do cx-set-toggle-button2 \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\" #t)(cx-gui-do cx-activate-item \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\")(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 45))")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
mesh2.Exit()
setupComponent2.Update(AllDependencies=True)
Save(Overwrite=True)
