# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="Geom")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/SOFC_Complete.step")
system2 = GetSystem(Name="SYS")
meshComponent1 = system2.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system2.GetContainer(ComponentName="Mesh")
mesh1.Edit()
mesh1.Exit()
system3 = GetSystem(Name="Geom 1")
system3.Delete()
geometry1.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/SOFC_Complete.step")
mesh1.Edit()
mesh1.Exit()
geometry1.SetFile(FilePath="C:/Users/mofid/Desktop/SOFC/Ansys SOFC/SOFC_Complete.sab")
meshComponent1.Refresh()
mesh1.Edit()
Save(Overwrite=True)
system4 = GetSystem(Name="FLU")
setupComponent1 = system4.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system4.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|PEM Fuel Cell (On)\"))(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 2))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 3))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\" '( 0))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Micro Porous Layer\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*ToggleBox2(Anode Zone Type)*Micro Porous Layer\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\" '( 5))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame3(Anode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton5(Apply)")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\" '( 14))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame4(Electrolyte)*Table1*Frame2(Electrolyte)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Current Collector\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\" '( 8))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame3(Current Collector)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Flow Channel\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\" '( 9))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame4(Flow Channel)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\" '( 13))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame5(Porous Electrode)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*TPB Layer (Catalyst)\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Porous Electrode\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Micro Porous Layer\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*ToggleBox2(Cathode Zone Type)*Micro Porous Layer\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\" '( 11))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame5(Cathode)*Table1*Frame7(Micro Porous Layer)*Table1*List1(Zone(s))\")(cx-gui-do cx-set-toggle-button2 \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\" #t)(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*ToggleBox2(Advanced Setup)*Contact Resistivity\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 14))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\" '( 14 27))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame6(Advanced)*Table1*Frame3(Contact Resistivity)*Table1*List1(Available Zone(s))\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '())")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton5(Apply)")(cx-gui-do cx-activate-item "Warning*OK")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '( 95))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99))(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '( 89 95))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\")(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\" '( 89))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List1(Anode)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '())(cx-gui-do cx-set-list-selections \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\" '( 95))(cx-gui-do cx-activate-item \"PEM Fuel Cell Model*Table1*Table2*Frame1*Frame7(Reports)*Table1*Table2(Reports)*Table3(External Contact Interface(s))*List2(Cathode)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton5(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"200000\" . 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "??")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)\"))(cx-gui-do cx-set-list-selections \"Fluid*Table2*Table1*DropDownList1(Material Name)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Table2*Table1*DropDownList1(Material Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Table2*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))(cx-gui-do cx-set-toggle-button2 "Fluid*Table3*CheckButton3(Porous Zone)" #t)(cx-gui-do cx-activate-item "Fluid*Table3*CheckButton3(Porous Zone)")(cx-gui-do cx-set-toggle-button2 "Fluid*Table3*CheckButton3(Porous Zone)" #f)(cx-gui-do cx-activate-item "Fluid*Table3*CheckButton3(Porous Zone)")(cx-gui-do cx-set-toggle-button2 "Fluid*Table3*CheckButton7(Source Terms)" #t)(cx-gui-do cx-activate-item "Fluid*Table3*CheckButton7(Source Terms)")(cx-gui-do cx-set-toggle-button2 "Fluid*Table3*CheckButton7(Source Terms)" #f)(cx-gui-do cx-activate-item "Fluid*Table3*CheckButton7(Source Terms)")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|cathode_inlet_mass_flow_rate (fluid, id=44)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|PEM Fuel Cell (On)"))(cx-gui-do cx-activate-item "PEM Fuel Cell Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_inlet_mass_flow_rate (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_inlet_mass_flow_rate (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_inlet_mass_flow_rate (wall, id=9)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"353\" . 0))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)\"))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table1(User-Defined Scalar Boundary Condition)*DropDownList1(Electric Potential)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame7(UDS)*Frame1*Table1*Table2(User-Defined Scalar Boundary Value)*Table1*ExpressionEntry1(Electric Potential)\" '(\"0.65\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*ExpressionEntry1(Temperature)\" '(\"380\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_inlet_mass_flow_rate (wall, id=9)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-anode_inlet_mass_flow_rate (wall, id=9)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-anode_inlet_mass_flow_rate (wall, id=9)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"\" . 1))")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.003\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.003\" . 0))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Relative to Adjacent Cell Zone\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Relative to Adjacent Cell Zone\")(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table1*ExpressionEntry1(h2)\" '(\"0.6\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.4\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.4\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))(cx-gui-do cx-set-toggle-button2 "Fluid*Table3*CheckButton1(Frame Motion)" #t)(cx-gui-do cx-activate-item "Fluid*Table3*CheckButton1(Frame Motion)")(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)\"))(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall\")(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table2*Table1*ExpressionEntry1(Speed)\" '(\"0.2\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Wall|wall-cathode_inlet_mass_flow_rate (wall, id=14)\"))(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList1(h2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList2(o2)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame4(Species)*Frame1*Table3*Table1(Species Boundary Condition)*DropDownList3(h2o)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.21\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table2*ExpressionEntry1(o2)\" '(\"0.21\" . 0))(cx-gui-do cx-set-expression-entry \"Wall*Frame3*Frame4(Species)*Frame1*Table3*Table2(Species Mass Fractions)*Table3*ExpressionEntry1(h2o)\" '(\"0.15\" . 0))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_outlet_pressure (wall, id=241)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_outlet_pressure (wall, id=241)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Wall|wall-cathode_outlet_pressure (wall, id=241)"))(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Specified Shear" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Specified Shear")(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Marangoni Stress" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Marangoni Stress")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_inlet_mass_flow_rate (fluid, id=39)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_outlet_pressure (fluid, id=38)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_outlet_pressure (fluid, id=38)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_outlet_pressure (fluid, id=38)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_outlet_pressure (fluid, id=38)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Table2*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Fluid*Table3*CheckButton1(Frame Motion)\" #t)(cx-gui-do cx-activate-item \"Fluid*Table3*CheckButton1(Frame Motion)\")(cx-gui-do cx-set-toggle-button2 \"Fluid*Table3*CheckButton4(3D Fan Zone)\" #t)(cx-gui-do cx-activate-item \"Fluid*Table3*CheckButton4(3D Fan Zone)\")(cx-gui-do cx-set-toggle-button2 \"Fluid*Table4*Frame1*Frame4(3D Fan Zone)*Table1*Table1*Table2(Properties)*Table2*CheckButton1(Tangential Source Term)\" #t)(cx-gui-do cx-activate-item \"Fluid*Table4*Frame1*Frame4(3D Fan Zone)*Table1*Table1*Table2(Properties)*Table2*CheckButton1(Tangential Source Term)\")(cx-gui-do cx-set-toggle-button2 \"Fluid*Table4*Frame1*Frame4(3D Fan Zone)*Table1*Table1*Table2(Properties)*Table2*CheckButton1(Tangential Source Term)\" #f)(cx-gui-do cx-activate-item \"Fluid*Table4*Frame1*Frame4(3D Fan Zone)*Table1*Table1*Table2(Properties)*Table2*CheckButton1(Tangential Source Term)\")(cx-gui-do cx-set-list-selections \"Fluid*Table4*Frame1*Frame1(Reference Frame)*Table1*Table1*Table1*Table1*Table1(Relative Specification)*DropDownList1(Relative To Cell Zone)\" '( 14))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*Table4*Frame1*Frame1(Reference Frame)*Table1*Table1*Table1*Table1*Table1(Relative Specification)*DropDownList1(Relative To Cell Zone)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Fluid*Table4*Frame1*Frame1(Reference Frame)*Table1*Table1*Table2(Rotation-Axis Origin)*Table2*ExpressionEntry1(Y)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Fluid*Table4*Frame1*Frame1(Reference Frame)*Table1*Table1*Table2(Rotation-Axis Origin)*Table1*ExpressionEntry1(X)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Fluid*Table4*Frame1*Frame1(Reference Frame)*Table1*Table1*Table4*Table1*Table1(Rotational Velocity)*Table1*ExpressionEntry1(Speed)\" '(\"0\" . 0))(cx-gui-do cx-activate-item \"Fluid*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|cathode_inlet_mass_flow_rate (fluid, id=44)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|Fluid|anode_gas_diffusion_channel (fluid, id=41)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*PushButton1(Run Calculation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solution)*Table1*Table3(Run Calculation)*PushButton5(Run Calculation)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.00210784 -0.0210864 0.0112083) '(0 0 0) '(0.297096 0.260221 0.652009) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0159313 0.00268763 -0.0240724) '(0 0 0) '(0.18494 -0.119317 -0.681688) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-5.9396e-05 0.000481654 -0.00270518) '(0 0 0) '(-0.0667004 -0.0118074 -0.0121768) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*CheckButton10(Set All Species Discretizations Together)" #t)(cx-gui-do cx-activate-item "Solution Methods*Table1*CheckButton10(Set All Species Discretizations Together)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton1(More Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton1(Use Specified Initial Pressure on Inlets)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton1(Use Specified Initial Pressure on Inlets)")(cx-gui-do cx-set-toggle-button2 "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton2(Use External-Aero Favorable Settings)" #t)(cx-gui-do cx-activate-item "Hybrid Initialization*Frame1*Frame1(General Settings)*Table1*Table1*ToggleBox4(Initialization Options)*CheckButton2(Use External-Aero Favorable Settings)")(cx-gui-do cx-activate-item "Hybrid Initialization*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame11*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
Save(Overwrite=True)
